@using Bookish.Models
@model CopyCatalogueViewModel

@{
    ViewData["CopiesAvailable"] = @Model.CopyCatalogue.Where(c => c.CheckedOut == false).ToList().Count;
}

<div class="text-center">
    <h1 class="display-4">@Model.CopyCatalogue[0].Book.Title</h1>
    <h5>There are @Model.CopyCatalogue.Count copies of this book, and @ViewData["CopiesAvailable"] available copies. </h5>    

    <table class="table table-striped table-bordered">
        <tr> 
            <th>Copy Id</th>
            <th>Checked out?</th>
            <th></th>
        </tr>
    @foreach (var copy in Model.CopyCatalogue) 
    {
        <tr>
            <td> @copy.CopyId </td>
            <td> @copy.CheckedOut </td>
            <td>
                @Html.ActionLink("Checkout History", "Checkout", new { id=copy.Book.BookId }) |
                @Html.ActionLink("Delete Copy", "DeleteCopy", new { id=copy.Book.BookId }) 
            </td>
        </tr>
    }
    </table>
    @Html.ActionLink("Add a New Copy", "AddCopy", new { id = Model.CopyCatalogue[0].Book.BookId }) <br />
    @Html.ActionLink("Back to Catalogue", "Index") 
</div>

